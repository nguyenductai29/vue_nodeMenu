{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport * as modules from './modules';\nVue.use(Vuex);\nvar SESSION_KEY = 'smatApp';\n\nvar getInitState = function getInitState() {\n  return {\n    auth: null,\n    title: null\n  };\n};\n\nexport default new Vuex.Store({\n  state: getInitState(),\n  modules: modules,\n  mutations: {\n    setInitState: function setInitState(state) {\n      return Object.assign(state, getInitState());\n    },\n    setAuth: function setAuth(state, auth) {\n      return Vue.set(state, 'auth', auth);\n    },\n    setTitle: function setTitle(state, title) {\n      return Vue.set(state, 'title', title);\n    }\n  },\n  actions: {\n    initState: function initState(_ref) {\n      var dispatch = _ref.dispatch,\n          commit = _ref.commit;\n      return Object.keys(modules).forEach(function (module) {\n        return dispatch(\"\".concat(module, \"/initState\"));\n      });\n    },\n    setAuth: function setAuth(_ref2, auth) {\n      var commit = _ref2.commit;\n      return commit('setAuth', auth);\n    },\n    setTitle: function setTitle(_ref3, title) {\n      var commit = _ref3.commit;\n      return commit('setTitle', title);\n    }\n  },\n  getters: {\n    menuPath: function menuPath(state) {\n      switch (state.auth) {\n        case 0:\n          return Vue.prototype.$path.MENU;\n\n        case 1:\n          return Vue.prototype.$path.MASTER_MENU;\n\n        case 2:\n          return Vue.prototype.$path.REFERENCE_MENU;\n      }\n    },\n    title: function title(state) {\n      return state.title;\n    }\n  },\n  plugins: [createPersistedState({\n    key: SESSION_KEY,\n    storage: window.sessionStorage\n  })]\n});","map":{"version":3,"sources":["C:/プロジェクト_moke/vue_node_web_system/frontend/src/store/index.js"],"names":["Vue","Vuex","createPersistedState","modules","use","SESSION_KEY","getInitState","auth","title","Store","state","mutations","setInitState","Object","assign","setAuth","set","setTitle","actions","initState","dispatch","commit","keys","forEach","module","getters","menuPath","prototype","$path","MENU","MASTER_MENU","REFERENCE_MENU","plugins","key","storage","window","sessionStorage"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,IAAMI,WAAW,GAAG,SAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AAC1BC,IAAAA,IAAI,EAAE,IADoB;AAE1BC,IAAAA,KAAK,EAAE;AAFmB,GAAP;AAAA,CAArB;;AAKA,eAAe,IAAIP,IAAI,CAACQ,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAEJ,YAAY,EADS;AAE5BH,EAAAA,OAAO,EAAEA,OAFmB;AAG5BQ,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE,sBAACF,KAAD;AAAA,aAAWG,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqBJ,YAAY,EAAjC,CAAX;AAAA,KADL;AAETS,IAAAA,OAAO,EAAE,iBAACL,KAAD,EAAQH,IAAR;AAAA,aAAiBP,GAAG,CAACgB,GAAJ,CAAQN,KAAR,EAAe,MAAf,EAAuBH,IAAvB,CAAjB;AAAA,KAFA;AAGTU,IAAAA,QAAQ,EAAE,kBAACP,KAAD,EAAQF,KAAR;AAAA,aAAkBR,GAAG,CAACgB,GAAJ,CAAQN,KAAR,EAAe,OAAf,EAAwBF,KAAxB,CAAlB;AAAA;AAHD,GAHiB;AAQ5BU,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE;AAAA,UAAGC,QAAH,QAAGA,QAAH;AAAA,UAAaC,MAAb,QAAaA,MAAb;AAAA,aAA0BR,MAAM,CAACS,IAAP,CAAYnB,OAAZ,EAAqBoB,OAArB,CAA6B,UAAAC,MAAM;AAAA,eAAIJ,QAAQ,WAAII,MAAJ,gBAAZ;AAAA,OAAnC,CAA1B;AAAA,KADJ;AAEPT,IAAAA,OAAO,EAAE,wBAAaR,IAAb;AAAA,UAAGc,MAAH,SAAGA,MAAH;AAAA,aAAsBA,MAAM,CAAC,SAAD,EAAYd,IAAZ,CAA5B;AAAA,KAFF;AAGPU,IAAAA,QAAQ,EAAE,yBAAaT,KAAb;AAAA,UAAGa,MAAH,SAAGA,MAAH;AAAA,aAAuBA,MAAM,CAAC,UAAD,EAAab,KAAb,CAA7B;AAAA;AAHH,GARmB;AAa5BiB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,kBAAChB,KAAD,EAAW;AACnB,cAAQA,KAAK,CAACH,IAAd;AACE,aAAK,CAAL;AAAQ,iBAAOP,GAAG,CAAC2B,SAAJ,CAAcC,KAAd,CAAoBC,IAA3B;;AACR,aAAK,CAAL;AAAQ,iBAAO7B,GAAG,CAAC2B,SAAJ,CAAcC,KAAd,CAAoBE,WAA3B;;AACR,aAAK,CAAL;AAAQ,iBAAO9B,GAAG,CAAC2B,SAAJ,CAAcC,KAAd,CAAoBG,cAA3B;AAHV;AAKD,KAPM;AAQPvB,IAAAA,KAAK,EAAE,eAACE,KAAD;AAAA,aAAWA,KAAK,CAACF,KAAjB;AAAA;AARA,GAbmB;AAuB5BwB,EAAAA,OAAO,EAAE,CAAC9B,oBAAoB,CAAC;AAC7B+B,IAAAA,GAAG,EAAE5B,WADwB;AAE7B6B,IAAAA,OAAO,EAAEC,MAAM,CAACC;AAFa,GAAD,CAArB;AAvBmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport createPersistedState from 'vuex-persistedstate'\r\nimport * as modules from './modules'\r\n\r\nVue.use(Vuex)\r\n\r\nconst SESSION_KEY = 'smatApp'\r\n\r\nconst getInitState = () => ({\r\n  auth: null,\r\n  title: null\r\n})\r\n\r\nexport default new Vuex.Store({\r\n  state: getInitState(),\r\n  modules: modules,\r\n  mutations: {\r\n    setInitState: (state) => Object.assign(state, getInitState()),\r\n    setAuth: (state, auth) => Vue.set(state, 'auth', auth),\r\n    setTitle: (state, title) => Vue.set(state, 'title', title)\r\n  },\r\n  actions: {\r\n    initState: ({ dispatch, commit }) => Object.keys(modules).forEach(module => dispatch(`${module}/initState`)),\r\n    setAuth: ({ commit }, auth) => commit('setAuth', auth),\r\n    setTitle: ({ commit }, title) => commit('setTitle', title)\r\n  },\r\n  getters: {\r\n    menuPath: (state) => {\r\n      switch (state.auth) {\r\n        case 0: return Vue.prototype.$path.MENU\r\n        case 1: return Vue.prototype.$path.MASTER_MENU\r\n        case 2: return Vue.prototype.$path.REFERENCE_MENU\r\n      }\r\n    },\r\n    title: (state) => state.title\r\n  },\r\n  plugins: [createPersistedState({\r\n    key: SESSION_KEY,\r\n    storage: window.sessionStorage\r\n  })]\r\n})\r\n"]},"metadata":{},"sourceType":"module"}